using UnityEngine;

public class SmoothCamera : MonoBehaviour
{
    public Transform target;
    public float distance = 10.0f;
    public float height = 5.0f;
    public float heightDamping = 2.0f;
    public float followDamping = 5.0f;

    private float nearestObstacleDistance = 0.0f;

    void LateUpdate()
    {
        if (!target)
            return;

        float wantedHeight = target.position.y + height;

        Vector3 wantedPosition = target.position - target.forward * distance;
        wantedPosition.y = wantedHeight;

        RaycastHit hit;
        if (Physics.Raycast(target.position, -target.forward, out hit))
        {
            if (hit.transform != target)
            {
                nearestObstacleDistance = hit.distance;
                // Schimbă distanța și înălțimea camerei în funcție de distanța la cel mai apropiat obstacol
                distance -= nearestObstacleDistance;
                height -= 2.0f;
            }
        }
        else
        {
            nearestObstacleDistance = 0.0f;
            distance = 10.0f;
            height = 5.0f;
        }

        float currentHeight = Mathf.Lerp(transform.position.y, wantedHeight, heightDamping * Time.deltaTime);

        Vector3 currentPosition = Vector3.Lerp(transform.position, wantedPosition, followDamping * Time.deltaTime);
        currentPosition.y = currentHeight;

        transform.position = currentPosition;
        transform.LookAt(target);
    }
}
